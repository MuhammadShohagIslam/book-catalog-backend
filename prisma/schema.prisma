// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model for user
model User {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  password   String
  profileImg String
  address    String
  contactNo  String
  role       UserRole @default(CUSTOMER)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  reviewAndRatings ReviewAndRating[]
  orders           Order[]

  @@map("users")
}

// model for category 
model Category {
  id        String   @id @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  books     Book[]

  @@map("categories")
}

// model for book  
model Book {
  id              String   @id @default(uuid())
  title           String
  author          String
  price           Float
  genre           Float
  publicationDate String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  reviewAndRatings ReviewAndRating[]

  @@map("books")
}

// model for review and rating   
model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  bookId String
  book   Book   @relation(fields: [bookId], references: [id])

  @@map("review_rating")
}

// model for order  
model Order {
  id        String      @id @default(uuid())
  status    OrderStatus @default(pending)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])

  orderedBooks Json

  @@map("orders")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  pending
  shipped
  delivered
}
